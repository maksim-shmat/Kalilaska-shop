# *.[oa] - ignore filename? ended ".o" or ".a"
# *~     - ignore all files ended for ~
# And passwords I'm keep right in code - bes paleva.

# / in begin for antirecursion

# / in the end of pattern for remove dir or - ! inverted
#
# Glob patterns: * - 0 or more char, [abc] - is any a or b, or c, (?)one char,
# [0-9] - any in interval, a/**/z equals a/z, a/b/z, a/b/c/z etc.

# one string - one rule

# foo.txt - ignor file foo.txt

# *.html - ignor html files

# !foo.html - but foo.html not ignor

# /*.rar - ignore .rar in root dir

# /bar/*.css - ignore .css filel only from dir /bar/

# /bar/**.*.js - ignore .js files from dir /bar/ recursively (** all subdir)

# for examples: Byte-compiled/ optimized/ DLL files
#
# __pycache__/
# *.py[cod]
# *$py.class

# C extensions
#
# *.so

# Distribution/ packaging
#
# .Python
# build/
# develop-eggs/
# dist/
# downloads/
# eggs/
# .eggs/
# lig/
# lib64/
# parts/
# sdist/
# var/
# wheels/
# share/python-wheels/
# *.egg-info/
# .installed.cfg
# *.egg
# MANIFEST

# PyInstaller
# Usually these files are written by a python script from a template
# before PyInstaller builds the exe, so as to inject date/other infos into it.
#
# *.manifest
# *.spec

# Installer logs
#
# pip-log.txt
# pip-delete-this-directory.txt

# Unit test/ coverage reports
#
# htmlcov/
# .tox/
# .nox/
# .coverage
# .coverage.*
# .cache
# nosetests.xml
# coverage.xml
# *.cover
# *.py, cover
# .hypothesis/
# .pytest_cache/
# cover/

# Translations
#
# *.mo
# *.pot

# Django stuff
#
# *.log
# local_settings.py
# db.sqlite3
# db.sqlite3-journal

# Flask stuff
#
# instance/
# .webassets-cache

# Scrapy stuff
# .scrapy

# Sphinx documentation
#
# docs/_build/

# PyBuilder
#
# .pybuilder/
# target/

# Jupyter Notebook
#
# .ipynd_checkpoints

# IPython
#
# profile_default/
# ipython_config.py

# pyenv
#
# For a library or package, you might want to ignore these files since the 
# code is intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#
# According to pypa/pipenv#598, it is recommended to include Pipfile.lock in
# version control. However, in case of collaboration, if having platform-
# specific dependencies or dependencies having no cross-platform support, 
# pipenv may install dependencies that don't work, or not install all needed 
# dependencies.
#
# Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
#
# __pypackages__/

# Celery stuff
#
# celerybeat-schedule
# celerybeat.pid

# SageMath parsed files
#
# *.sage.py

# Environments
#
# .env
# .venv
# env/
# venv/
# ENV/
# env.bak/
# venv.bak/

# Spyder project settings
#
#.spyderproject
#.spyproject

# Rope project settings
#
# .ropeproject

# mkdocs documentation
#
# /site

# mypy
#
# .mypy_cache/
# .dmypy.json
# dmypy.json

# Pyre type checker
#
# .pyre/

# pytype static type analizer
#
# .pytype/

# Cython debug symbols
#
# cython_debug/ 
